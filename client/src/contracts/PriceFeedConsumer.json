{
  "contractName": "PriceFeedConsumer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregatorAddressDai",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aggregatorAddressLink",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregatorAddressDai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregatorAddressLink\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPrice(address)\":{\"notice\":\"Returns the latest price\"}},\"notice\":\"For now it supports manual added asset because feed registry (https://docs.chain.link/data-feeds/feed-registry) is not available on testnet. TODO: handle multiple assets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PriceFeedConsumer.sol\":\"PriceFeedConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/contracts/PriceFeedConsumer.sol\":{\"keccak256\":\"0x74c33a58764bdcbde2cb253575c755bfede835724dc8cfd9f2bb178a76c9efd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bf5c0cc2a120c15e74360aa4f8f221dcdd20f768e0a80453f21934fdddd989c\",\"dweb:/ipfs/QmaNURU5zdwk1xT1gVpfNBYrzYjzUz3hbvyWrDmMsN1X2q\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105d13803806105d183398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610513806100be6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806316345f1814610030575b600080fd5b61004361003e3660046102de565b610055565b60405190815260200160405180910390f35b600080546001600160a01b039081169083167375ab5ab1eef154c0352fc31d2428cef80c7f8b32190161009457506000546001600160a01b03166100a2565b506001546001600160a01b03165b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101069190610326565b505050915050836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610376565b60ff16826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610376565b60ff1610156102d7576000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610376565b61024b90600a610495565b856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad9190610376565b6102b890600a610495565b6102c291906104a4565b90506102ce81836104c6565b95945050505050565b9392505050565b6000602082840312156102f057600080fd5b81356001600160a01b03811681146102d757600080fd5b805169ffffffffffffffffffff8116811461032157600080fd5b919050565b600080600080600060a0868803121561033e57600080fd5b61034786610307565b945060208601519350604086015192506060860151915061036a60808701610307565b90509295509295909350565b60006020828403121561038857600080fd5b815160ff811681146102d757600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156103ea5781600019048211156103d0576103d0610399565b808516156103dd57918102915b93841c93908002906103b4565b509250929050565b6000826104015750600161048f565b8161040e5750600061048f565b8160018114610424576002811461042e5761044a565b600191505061048f565b60ff84111561043f5761043f610399565b50506001821b61048f565b5060208310610133831016604e8410600b841016171561046d575081810a61048f565b61047783836103af565b806000190482111561048b5761048b610399565b0290505b92915050565b60006102d760ff8416836103f2565b6000826104c157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761048f5761048f61039956fea264697066735822122096717d05891572abbfd125ab068f4295e9aa66f9a6e26fe6a6dc7a37a53dc42764736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806316345f1814610030575b600080fd5b61004361003e3660046102de565b610055565b60405190815260200160405180910390f35b600080546001600160a01b039081169083167375ab5ab1eef154c0352fc31d2428cef80c7f8b32190161009457506000546001600160a01b03166100a2565b506001546001600160a01b03165b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101069190610326565b505050915050836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610376565b60ff16826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610376565b60ff1610156102d7576000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610376565b61024b90600a610495565b856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad9190610376565b6102b890600a610495565b6102c291906104a4565b90506102ce81836104c6565b95945050505050565b9392505050565b6000602082840312156102f057600080fd5b81356001600160a01b03811681146102d757600080fd5b805169ffffffffffffffffffff8116811461032157600080fd5b919050565b600080600080600060a0868803121561033e57600080fd5b61034786610307565b945060208601519350604086015192506060860151915061036a60808701610307565b90509295509295909350565b60006020828403121561038857600080fd5b815160ff811681146102d757600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156103ea5781600019048211156103d0576103d0610399565b808516156103dd57918102915b93841c93908002906103b4565b509250929050565b6000826104015750600161048f565b8161040e5750600061048f565b8160018114610424576002811461042e5761044a565b600191505061048f565b60ff84111561043f5761043f610399565b50506001821b61048f565b5060208310610133831016604e8410600b841016171561046d575081810a61048f565b61047783836103af565b806000190482111561048b5761048b610399565b0290505b92915050565b60006102d760ff8416836103f2565b6000826104c157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761048f5761048f61039956fea264697066735822122096717d05891572abbfd125ab068f4295e9aa66f9a6e26fe6a6dc7a37a53dc42764736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:491:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:13",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:13",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:13"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:13"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:13"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:13",
                "type": ""
              }
            ],
            "src": "14:177:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:13",
                "type": ""
              }
            ],
            "src": "196:293:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3357:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:13"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:13",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:13"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:13",
                "type": ""
              }
            ],
            "src": "14:309:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:76:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "451:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "447:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "439:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:13"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "492:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:25:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:25:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "409:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "420:4:13",
                "type": ""
              }
            ],
            "src": "328:177:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "569:120:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "579:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "594:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "588:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "579:5:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "667:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "676:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "679:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "669:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "669:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "669:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "623:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "634:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "641:22:13",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "630:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "630:34:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "620:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "620:45:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:53:13"
                  },
                  "nodeType": "YulIf",
                  "src": "610:73:13"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "548:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "559:5:13",
                "type": ""
              }
            ],
            "src": "510:179:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "840:327:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "887:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "896:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "899:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "889:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "889:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "889:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "861:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "870:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "857:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "857:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "882:3:13",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "853:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "853:33:13"
                  },
                  "nodeType": "YulIf",
                  "src": "850:53:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "912:49:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "951:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "922:28:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:39:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "912:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:35:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "990:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1001:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "986:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "986:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "980:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:25:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1014:35:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1034:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1045:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1030:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1030:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1024:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:25:13"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1014:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1058:35:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1078:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1089:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1074:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1074:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1068:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:25:13"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1058:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1102:59:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:3:13",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:19:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1112:28:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1112:49:13"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1102:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "774:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "785:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "797:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "805:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "813:6:13",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "821:6:13",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "829:6:13",
                "type": ""
              }
            ],
            "src": "694:473:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1251:194:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1297:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1306:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1309:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1299:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1299:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1299:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1272:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1264:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1261:52:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1322:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1341:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1335:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:16:13"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1326:5:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1399:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1408:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1411:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1401:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1401:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1401:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1373:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1384:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1391:4:13",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1380:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1380:16:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1370:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1363:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1363:35:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1360:55:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1424:15:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1434:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1424:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1217:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1228:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1240:6:13",
                "type": ""
              }
            ],
            "src": "1172:273:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1482:95:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1499:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1506:3:13",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1511:10:13",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1502:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1502:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1492:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1492:31:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1492:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1542:4:13",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1532:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1532:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1532:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1563:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1566:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1556:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1556:15:13"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1450:127:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1646:358:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1656:16:13",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1671:1:13",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "1660:7:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:16:13",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "1690:7:13"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "1681:5:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1706:13:13",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "1714:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "1706:4:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1770:228:13",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1815:22:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1817:16:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1817:18:13"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1817:18:13"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1790:4:13"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1804:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "1800:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1800:6:13"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "1808:4:13"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1796:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1796:17:13"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1787:2:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1787:27:13"
                        },
                        "nodeType": "YulIf",
                        "src": "1784:53:13"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1876:29:13",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1878:25:13",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "1891:5:13"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1898:4:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1887:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1887:16:13"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1878:5:13"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1857:8:13"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "1867:7:13"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1853:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1853:22:13"
                        },
                        "nodeType": "YulIf",
                        "src": "1850:55:13"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1918:23:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1930:4:13"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1936:4:13"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1926:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1926:15:13"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "1918:4:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1954:34:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "1970:7:13"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1979:8:13"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "1966:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1966:22:13"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "1954:8:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "1739:8:13"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "1749:7:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1736:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:21:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1758:3:13",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1732:3:13",
                    "statements": []
                  },
                  "src": "1728:270:13"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "1610:5:13",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1617:8:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1630:5:13",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1637:4:13",
                "type": ""
              }
            ],
            "src": "1582:422:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2068:747:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2106:52:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2120:10:13",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2129:1:13",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "2120:5:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "2143:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2088:8:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2081:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2081:16:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2078:80:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2191:52:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2205:10:13",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2214:1:13",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "2205:5:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "2228:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2177:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2170:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:12:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2167:76:13"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2279:52:13",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2293:10:13",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2302:1:13",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "2293:5:13"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "2316:5:13"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2272:59:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2277:1:13",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2347:123:13",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2382:22:13",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2384:16:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2384:18:13"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2384:18:13"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "2367:8:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2377:3:13",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "2364:2:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2364:17:13"
                            },
                            "nodeType": "YulIf",
                            "src": "2361:43:13"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2417:25:13",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "2430:8:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2440:1:13",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2426:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2426:16:13"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "2417:5:13"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "2455:5:13"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2340:130:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:1:13",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "2259:4:13"
                  },
                  "nodeType": "YulSwitch",
                  "src": "2252:218:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2568:70:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2582:28:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "2595:4:13"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "2601:8:13"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "2591:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2591:19:13"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "2582:5:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "2623:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "2492:4:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2498:2:13",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2489:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2489:12:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "2506:8:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2516:2:13",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2503:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2503:16:13"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2485:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2485:35:13"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "2529:4:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2535:3:13",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2526:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2526:13:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "2544:8:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2554:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2541:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2541:16:13"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2522:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2522:36:13"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2482:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2482:77:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2479:159:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2647:57:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2689:4:13"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2695:8:13"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "2670:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:34:13"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "2651:7:13",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "2660:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2749:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2751:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2751:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2751:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2719:7:13"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2736:1:13",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2732:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2732:6:13"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "2740:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "2728:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2728:19:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2716:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2713:58:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2780:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2793:7:13"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "2802:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2789:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2789:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2780:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "2039:4:13",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "2045:8:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "2058:5:13",
                "type": ""
              }
            ],
            "src": "2009:806:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2888:72:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2898:56:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2928:4:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "2938:8:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2948:4:13",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2934:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2934:19:13"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "2907:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2907:47:13"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2898:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "2859:4:13",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "2865:8:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "2878:5:13",
                "type": ""
              }
            ],
            "src": "2820:140:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3011:171:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3042:111:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3063:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3070:3:13",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3075:10:13",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3066:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3066:20:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3056:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3056:31:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3056:31:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3107:1:13",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3110:4:13",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3100:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3100:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3100:15:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3135:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3138:4:13",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3128:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3128:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3128:15:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3031:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3024:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3024:9:13"
                  },
                  "nodeType": "YulIf",
                  "src": "3021:132:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3162:14:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3171:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3174:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3167:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3167:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3162:1:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2996:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2999:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3005:1:13",
                "type": ""
              }
            ],
            "src": "2965:217:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3239:116:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3249:20:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3264:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3267:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3260:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3260:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3249:7:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3327:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3329:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3329:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3329:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3298:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3291:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3291:9:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3305:1:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "3312:7:13"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3321:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3308:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3308:15:13"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3302:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3302:22:13"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "3288:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3288:37:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3281:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:45:13"
                  },
                  "nodeType": "YulIf",
                  "src": "3278:71:13"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3218:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3221:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3227:7:13",
                "type": ""
              }
            ],
            "src": "3187:168:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "497:1150:8:-:0;;;652:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;737:12;:59;;-1:-1:-1;;;;;737:59:8;;;-1:-1:-1;;;;;;737:59:8;;;;;;;;806:61;;;;;;;;;;;497:1150;;14:177:13;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;497:1150:8;;;;;;",
  "deployedSourceMap": "497:1150:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:717;;;;;;:::i;:::-;;:::i;:::-;;;474:25:13;;;462:2;447:18;928:717:8;;;;;;;;998:7;1051:12;;-1:-1:-1;;;;;1051:12:8;;;;1077:61;;-1:-1:-1;;1077:61:8;1073:172;;-1:-1:-1;1166:12:8;;-1:-1:-1;;;;;1166:12:8;1073:172;;;-1:-1:-1;1221:13:8;;-1:-1:-1;;;;;1221:13:8;1073:172;1291:12;1345:9;-1:-1:-1;;;;;1345:25:8;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1263:109;;;;;;1424:6;-1:-1:-1;;;;;1409:31:8;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1386:56;;:9;-1:-1:-1;;;;;1386:18:8;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;1382:226;;;1458:21;1526:9;-1:-1:-1;;;;;1526:18:8;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1522:24;;:2;:24;:::i;:::-;1501:6;-1:-1:-1;;;;;1486:31:8;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1482:37;;:2;:37;:::i;:::-;:64;;;;:::i;:::-;1458:88;-1:-1:-1;1567:30:8;1458:88;1575:5;1567:30;:::i;:::-;1560:37;928:717;-1:-1:-1;;;;;928:717:8:o;1382:226::-;1632:5;928:717;-1:-1:-1;;;928:717:8:o;14:309:13:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:13;220:54;213:5;210:65;200:93;;289:1;286;279:12;510:179;588:13;;641:22;630:34;;620:45;;610:73;;679:1;676;669:12;610:73;510:179;;;:::o;694:473::-;797:6;805;813;821;829;882:3;870:9;861:7;857:23;853:33;850:53;;;899:1;896;889:12;850:53;922:39;951:9;922:39;:::i;:::-;912:49;;1001:2;990:9;986:18;980:25;970:35;;1045:2;1034:9;1030:18;1024:25;1014:35;;1089:2;1078:9;1074:18;1068:25;1058:35;;1112:49;1156:3;1145:9;1141:19;1112:49;:::i;:::-;1102:59;;694:473;;;;;;;;:::o;1172:273::-;1240:6;1293:2;1281:9;1272:7;1268:23;1264:32;1261:52;;;1309:1;1306;1299:12;1261:52;1341:9;1335:16;1391:4;1384:5;1380:16;1373:5;1370:27;1360:55;;1411:1;1408;1401:12;1450:127;1511:10;1506:3;1502:20;1499:1;1492:31;1542:4;1539:1;1532:15;1566:4;1563:1;1556:15;1582:422;1671:1;1714:5;1671:1;1728:270;1749:7;1739:8;1736:21;1728:270;;;1808:4;1804:1;1800:6;1796:17;1790:4;1787:27;1784:53;;;1817:18;;:::i;:::-;1867:7;1857:8;1853:22;1850:55;;;1887:16;;;;1850:55;1966:22;;;;1926:15;;;;1728:270;;;1732:3;1582:422;;;;;:::o;2009:806::-;2058:5;2088:8;2078:80;;-1:-1:-1;2129:1:13;2143:5;;2078:80;2177:4;2167:76;;-1:-1:-1;2214:1:13;2228:5;;2167:76;2259:4;2277:1;2272:59;;;;2345:1;2340:130;;;;2252:218;;2272:59;2302:1;2293:10;;2316:5;;;2340:130;2377:3;2367:8;2364:17;2361:43;;;2384:18;;:::i;:::-;-1:-1:-1;;2440:1:13;2426:16;;2455:5;;2252:218;;2554:2;2544:8;2541:16;2535:3;2529:4;2526:13;2522:36;2516:2;2506:8;2503:16;2498:2;2492:4;2489:12;2485:35;2482:77;2479:159;;;-1:-1:-1;2591:19:13;;;2623:5;;2479:159;2670:34;2695:8;2689:4;2670:34;:::i;:::-;2740:6;2736:1;2732:6;2728:19;2719:7;2716:32;2713:58;;;2751:18;;:::i;:::-;2789:20;;-1:-1:-1;2009:806:13;;;;;:::o;2820:140::-;2878:5;2907:47;2948:4;2938:8;2934:19;2928:4;2907:47;:::i;2965:217::-;3005:1;3031;3021:132;;3075:10;3070:3;3066:20;3063:1;3056:31;3110:4;3107:1;3100:15;3138:4;3135:1;3128:15;3021:132;-1:-1:-1;3167:9:13;;2965:217::o;3187:168::-;3260:9;;;3291;;3308:15;;;3302:22;;3288:37;3278:71;;3329:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\";\n\ninterface IPriceFeedConsumer {\n    function getLatestPrice(address _asset) external view returns (uint256);\n}\n\n/**\n * For now it supports manual added asset because feed registry (https://docs.chain.link/data-feeds/feed-registry)\n * is not available on testnet.\n * TODO: handle multiple assets\n */\ncontract PriceFeedConsumer is IPriceFeedConsumer {\n    AggregatorV3Interface internal priceFeedDai;\n    AggregatorV3Interface internal priceFeedLink;\n\n    constructor(address _aggregatorAddressDai, address _aggregatorAddressLink) {\n        priceFeedDai = AggregatorV3Interface(_aggregatorAddressDai);\n        priceFeedLink = AggregatorV3Interface(_aggregatorAddressLink);\n    }\n\n    /**\n     * Returns the latest price\n     */\n    function getLatestPrice(address _asset) override public view returns (uint256) {\n        AggregatorV3Interface priceFeed = priceFeedDai;\n        if (_asset == address(0x75Ab5AB1Eef154C0352Fc31D2428Cef80C7F8B33)) {\n            priceFeed = priceFeedDai;\n        } else {\n            priceFeed = priceFeedLink;\n        }\n        \n        (\n            ,\n            int256 price,\n            ,\n            ,\n        ) = priceFeed.latestRoundData();\n        if (priceFeed.decimals() < IERC20Metadata(_asset).decimals()) {\n            uint256 decimalsToAdd = 10**IERC20Metadata(_asset).decimals() / 10**priceFeed.decimals();\n            return uint256(price) * decimalsToAdd;\n        }\n        return uint256(price);\n    }\n}\n",
  "sourcePath": "/Users/guillaumedebavelaere/alyra/projects/HelloDefi/truffle/contracts/PriceFeedConsumer.sol",
  "ast": {
    "absolutePath": "project:/contracts/PriceFeedConsumer.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "IERC20": [
        713
      ],
      "IERC20Metadata": [
        738
      ],
      "IPriceFeedConsumer": [
        856
      ],
      "PriceFeedConsumer": [
        963
      ]
    },
    "id": 964,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 846,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 847,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 46,
        "src": "57:76:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/interfaces/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20Metadata.sol",
        "id": 848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 49,
        "src": "134:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPriceFeedConsumer",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 856,
        "linearizedBaseContracts": [
          856
        ],
        "name": "IPriceFeedConsumer",
        "nameLocation": "209:18:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "16345f18",
            "id": 855,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "243:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "266:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "258:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "257:16:8"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "297:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:9:8"
            },
            "scope": 856,
            "src": "234:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 964,
        "src": "199:109:8",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 858,
              "name": "IPriceFeedConsumer",
              "nameLocations": [
                "527:18:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 856,
              "src": "527:18:8"
            },
            "id": 859,
            "nodeType": "InheritanceSpecifier",
            "src": "527:18:8"
          }
        ],
        "canonicalName": "PriceFeedConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 857,
          "nodeType": "StructuredDocumentation",
          "src": "310:186:8",
          "text": " For now it supports manual added asset because feed registry (https://docs.chain.link/data-feeds/feed-registry)\n is not available on testnet.\n TODO: handle multiple assets"
        },
        "fullyImplemented": true,
        "id": 963,
        "linearizedBaseContracts": [
          963,
          856
        ],
        "name": "PriceFeedConsumer",
        "nameLocation": "506:17:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 862,
            "mutability": "mutable",
            "name": "priceFeedDai",
            "nameLocation": "583:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "552:43:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 861,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 860,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "552:21:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "552:21:8"
              },
              "referencedDeclaration": 45,
              "src": "552:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 865,
            "mutability": "mutable",
            "name": "priceFeedLink",
            "nameLocation": "632:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "601:44:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 864,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 863,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "601:21:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "601:21:8"
              },
              "referencedDeclaration": 45,
              "src": "601:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "727:147:8",
              "statements": [
                {
                  "expression": {
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 872,
                      "name": "priceFeedDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "737:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 874,
                          "name": "_aggregatorAddressDai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "774:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 873,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "752:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "752:44:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "737:59:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "737:59:8"
                },
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 878,
                      "name": "priceFeedLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "806:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 880,
                          "name": "_aggregatorAddressLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "844:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 879,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "822:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "822:45:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "806:61:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "806:61:8"
                }
              ]
            },
            "id": 885,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "_aggregatorAddressDai",
                  "nameLocation": "672:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "664:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_aggregatorAddressLink",
                  "nameLocation": "703:22:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "695:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "663:63:8"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:8"
            },
            "scope": 963,
            "src": "652:222:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              855
            ],
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "1007:638:8",
              "statements": [
                {
                  "assignments": [
                    896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 896,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "1039:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "1017:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 895,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 894,
                          "name": "AggregatorV3Interface",
                          "nameLocations": [
                            "1017:21:8"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45,
                          "src": "1017:21:8"
                        },
                        "referencedDeclaration": 45,
                        "src": "1017:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 898,
                  "initialValue": {
                    "id": 897,
                    "name": "priceFeedDai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 862,
                    "src": "1051:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1017:46:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 899,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "1077:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307837354162354142314565663135344330333532466333314432343238436566383043374638423333",
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1095:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x75Ab5AB1Eef154C0352Fc31D2428Cef80C7F8B33"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1087:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1087:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1087:51:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1077:61:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "1195:50:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 910,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "1209:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 911,
                            "name": "priceFeedLink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "1221:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "1209:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 913,
                        "nodeType": "ExpressionStatement",
                        "src": "1209:25:8"
                      }
                    ]
                  },
                  "id": 915,
                  "nodeType": "IfStatement",
                  "src": "1073:172:8",
                  "trueBody": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "1140:49:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 905,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "1154:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 906,
                            "name": "priceFeedDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "1166:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "1154:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "1154:24:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    null,
                    917,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 917,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1298:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "1291:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 916,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1291:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 921,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 918,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "1345:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1355:15:8",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1345:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1263:109:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 922,
                          "name": "priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "1386:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1396:8:8",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "1386:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1386:20:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 926,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "1424:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 925,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "1409:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$738_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1409:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$738",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1432:8:8",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 737,
                        "src": "1409:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1409:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1386:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 955,
                  "nodeType": "IfStatement",
                  "src": "1382:226:8",
                  "trueBody": {
                    "id": 954,
                    "nodeType": "Block",
                    "src": "1444:164:8",
                    "statements": [
                      {
                        "assignments": [
                          932
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 932,
                            "mutability": "mutable",
                            "name": "decimalsToAdd",
                            "nameLocation": "1466:13:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 954,
                            "src": "1458:21:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 931,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1458:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 946,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1482:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 935,
                                      "name": "_asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 888,
                                      "src": "1501:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 934,
                                    "name": "IERC20Metadata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "1486:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$738_$",
                                      "typeString": "type(contract IERC20Metadata)"
                                    }
                                  },
                                  "id": 936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1486:22:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Metadata_$738",
                                    "typeString": "contract IERC20Metadata"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1509:8:8",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 737,
                                "src": "1486:31:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1486:33:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1482:37:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1522:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 941,
                                  "name": "priceFeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 896,
                                  "src": "1526:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1536:8:8",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6,
                                "src": "1526:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1526:20:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1522:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1482:64:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1458:88:8"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 949,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "1575:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1567:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 947,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1567:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1567:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 951,
                            "name": "decimalsToAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "1584:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1567:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 893,
                        "id": 953,
                        "nodeType": "Return",
                        "src": "1560:37:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 958,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "1632:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1624:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1624:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 960,
                  "nodeType": "Return",
                  "src": "1617:21:8"
                }
              ]
            },
            "documentation": {
              "id": 886,
              "nodeType": "StructuredDocumentation",
              "src": "880:43:8",
              "text": " Returns the latest price"
            },
            "functionSelector": "16345f18",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "937:14:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 890,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "968:8:8"
            },
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "960:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "952:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:16:8"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "998:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "997:9:8"
            },
            "scope": 963,
            "src": "928:717:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 964,
        "src": "497:1150:8",
        "usedErrors": []
      }
    ],
    "src": "32:1616:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0x9909D45a01039b7492DfC186F4118859ec53bBE0",
      "transactionHash": "0x2a0562653bfeea6ffca1cb946769312689976a66728a0cbd1bad8ac12a04a4a6"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-11T11:01:28.172Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getLatestPrice(address)": {
        "notice": "Returns the latest price"
      }
    },
    "notice": "For now it supports manual added asset because feed registry (https://docs.chain.link/data-feeds/feed-registry) is not available on testnet. TODO: handle multiple assets",
    "version": 1
  }
}