{
  "contractName": "MockPriceFeedConsumer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "answer",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "setAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"answer\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"answer\",\"type\":\"uint256\"}],\"name\":\"setAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/test/helpers/MockPriceFeedConsumer.sol\":\"MockPriceFeedConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/contracts/PriceFeedConsumer.sol\":{\"keccak256\":\"0x74c33a58764bdcbde2cb253575c755bfede835724dc8cfd9f2bb178a76c9efd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bf5c0cc2a120c15e74360aa4f8f221dcdd20f768e0a80453f21934fdddd989c\",\"dweb:/ipfs/QmaNURU5zdwk1xT1gVpfNBYrzYjzUz3hbvyWrDmMsN1X2q\"]},\"project:/test/helpers/MockPriceFeedConsumer.sol\":{\"keccak256\":\"0x018d716cbaa0bf3fafb1120ea457f2a3e705ad24f960fdd93d54273b1da51499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://205b8feae4367b81afa5bf7b1131bb9d0a6a11bed9485804a2c5e31b43004408\",\"dweb:/ipfs/QmP6y4KS7GtUm7LG15G4pF7wdZrGS5DeegsUEVmhtfSMPy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161015438038061015483398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b60f68061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806316345f1814603757806385a013e014605b575b600080fd5b60496042366004606d565b5060005490565b60405190815260200160405180910390f35b606b606636600460a8565b600055565b005b600060208284031215607e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460a157600080fd5b9392505050565b60006020828403121560b957600080fd5b503591905056fea26469706673582212207d2572369a5ad7640c323e59b1c2fab46ff9b98e8ff27157bd4c18fbc14692e164736f6c63430008110033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c806316345f1814603757806385a013e014605b575b600080fd5b60496042366004606d565b5060005490565b60405190815260200160405180910390f35b606b606636600460a8565b600055565b005b600060208284031215607e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460a157600080fd5b9392505050565b60006020828403121560b957600080fd5b503591905056fea26469706673582212207d2572369a5ad7640c323e59b1c2fab46ff9b98e8ff27157bd4c18fbc14692e164736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:200:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:103:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "166:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:13",
                "type": ""
              }
            ],
            "src": "14:184:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:692:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:13"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:13",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:13"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:13",
                "type": ""
              }
            ],
            "src": "14:309:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:76:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "451:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "447:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "439:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:13"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "492:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:25:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:25:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "409:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "420:4:13",
                "type": ""
              }
            ],
            "src": "328:177:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "580:110:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "626:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "635:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "638:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "628:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "628:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "628:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "601:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "610:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "597:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "597:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "622:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "593:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "593:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "590:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "651:33:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "674:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "661:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:23:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "651:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "546:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "557:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "569:6:13",
                "type": ""
              }
            ],
            "src": "510:180:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "106:359:11:-:0;;;195:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;233:7;:16;106:359;;14:184:13;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:13;;14:184;-1:-1:-1;14:184:13:o;:::-;106:359:11;;;;;;",
  "deployedSourceMap": "106:359:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:118;;;;;;:::i;:::-;-1:-1:-1;340:7:11;366;;262:118;;;;474:25:13;;;462:2;447:18;262:118:11;;;;;;;386:77;;;;;;:::i;:::-;440:7;:16;386:77;;;14:309:13;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:13:o;510:180::-;569:6;622:2;610:9;601:7;597:23;593:32;590:52;;;638:1;635;628:12;590:52;-1:-1:-1;661:23:13;;510:180;-1:-1:-1;510:180:13:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"../../contracts/PriceFeedConsumer.sol\";\n\ncontract MockPriceFeedConsumer is IPriceFeedConsumer {\n    uint256 private _answer;\n\n    constructor(uint256 answer) {\n        _answer = answer;\n    }\n\n    function getLatestPrice(address _asset) virtual public override view returns (uint256) {\n        return _answer;\n    }\n\n    function setAnswer(uint256 answer) external {\n        _answer = answer;\n    }\n}\n",
  "sourcePath": "/Users/guillaumedebavelaere/alyra/projects/HelloDefi/truffle/test/helpers/MockPriceFeedConsumer.sol",
  "ast": {
    "absolutePath": "project:/test/helpers/MockPriceFeedConsumer.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "IERC20": [
        713
      ],
      "IERC20Metadata": [
        738
      ],
      "IPriceFeedConsumer": [
        856
      ],
      "MockPriceFeedConsumer": [
        1058
      ],
      "PriceFeedConsumer": [
        963
      ]
    },
    "id": 1059,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1021,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "project:/contracts/PriceFeedConsumer.sol",
        "file": "../../contracts/PriceFeedConsumer.sol",
        "id": 1022,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1059,
        "sourceUnit": 964,
        "src": "57:47:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1023,
              "name": "IPriceFeedConsumer",
              "nameLocations": [
                "140:18:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 856,
              "src": "140:18:11"
            },
            "id": 1024,
            "nodeType": "InheritanceSpecifier",
            "src": "140:18:11"
          }
        ],
        "canonicalName": "MockPriceFeedConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1058,
        "linearizedBaseContracts": [
          1058,
          856
        ],
        "name": "MockPriceFeedConsumer",
        "nameLocation": "115:21:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1026,
            "mutability": "mutable",
            "name": "_answer",
            "nameLocation": "181:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 1058,
            "src": "165:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1025,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1035,
              "nodeType": "Block",
              "src": "223:33:11",
              "statements": [
                {
                  "expression": {
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1031,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "233:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1032,
                      "name": "answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "243:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "233:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1034,
                  "nodeType": "ExpressionStatement",
                  "src": "233:16:11"
                }
              ]
            },
            "id": 1036,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "answer",
                  "nameLocation": "215:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "207:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "206:16:11"
            },
            "returnParameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "223:0:11"
            },
            "scope": 1058,
            "src": "195:61:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              855
            ],
            "body": {
              "id": 1046,
              "nodeType": "Block",
              "src": "349:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 1044,
                    "name": "_answer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1026,
                    "src": "366:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1043,
                  "id": 1045,
                  "nodeType": "Return",
                  "src": "359:14:11"
                }
              ]
            },
            "functionSelector": "16345f18",
            "id": 1047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "271:14:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1040,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "317:8:11"
            },
            "parameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "294:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "286:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "286:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "285:16:11"
            },
            "returnParameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "340:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "339:9:11"
            },
            "scope": 1058,
            "src": "262:118:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "430:33:11",
              "statements": [
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1052,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "440:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1053,
                      "name": "answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "450:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "440:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "440:16:11"
                }
              ]
            },
            "functionSelector": "85a013e0",
            "id": 1057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAnswer",
            "nameLocation": "395:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1049,
                  "mutability": "mutable",
                  "name": "answer",
                  "nameLocation": "413:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "405:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "404:16:11"
            },
            "returnParameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:11"
            },
            "scope": 1058,
            "src": "386:77:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1059,
        "src": "106:359:11",
        "usedErrors": []
      }
    ],
    "src": "32:434:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-11T10:56:47.560Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}