{
  "contractName": "HelloDefiAAVE2Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aaveILendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feesManagerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_clone",
          "type": "address"
        }
      ],
      "name": "CloneCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createClone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aaveILendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feesManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_clone\",\"type\":\"address\"}],\"name\":\"CloneCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createClone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This smart contract creates and keep track of the HelloDefiAAVE2 smart contract using the clone pattern in order to save gas.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"HelloDefiAAVE2Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HelloDefiAAVE2Factory.sol\":\"HelloDefiAAVE2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/contracts/FeesCollector.sol\":{\"keccak256\":\"0x39528451bc66683273f9d69db10f208106bf51b17da0bc51a7023c4b42286ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eaf95b01a3588e962a305dee073ef503d371f4b4048c6bc82f917cb8252b321\",\"dweb:/ipfs/QmcL2HRtywmYA7vKuxsyHC83j2XtjxKxrQshbjswZxxxbR\"]},\"project:/contracts/HelloDefiAAVE2.sol\":{\"keccak256\":\"0xb5cf4e32abcfd7a457cb4efe185c9fa48bcaa010cf0ad5029f1a42c0315f95d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e32b511cb1c094febde751b06bb30d0bc7ecb3f22c93f2ecc983cfe3c58a3ba\",\"dweb:/ipfs/QmabAY8f8YEXMqiNRrtUcymXGtuuqtTzvgYcsNTB33unQS\"]},\"project:/contracts/HelloDefiAAVE2Factory.sol\":{\"keccak256\":\"0x946137f6472b0c732b04051b9f1596a994b41fff37dbb332982126328ea6fe50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6261657d68bb85d7f7a60bacab528a82a6953929ca68fb6b7d508bd10ef5ff5a\",\"dweb:/ipfs/QmTTRnbGxAx1y75J69y6LietiNznoLaKZXPzf5oCd3B8Qz\"]},\"project:/contracts/ILendingPoolAAVE2.sol\":{\"keccak256\":\"0xecd00e4981e916c241a4d36ac15ca1d7105b6d93887f17b10e598f3ea78f342d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422957536646db2858923c739be0af1eb36c1da4bf15603feb9697ea19ebc0ac\",\"dweb:/ipfs/QmTVZxvkjWWk43xyoEXuWZzu5MA57kia4khprgEEhEq4ox\"]},\"project:/contracts/PriceFeedConsumer.sol\":{\"keccak256\":\"0x7c153a452a4d8d295a1baccb77da72cb218f666c915b8a0e7a072669a6e73483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9473bc92841231787dd99c391986210f93501a79bd2f346c5aa414eb04d1684e\",\"dweb:/ipfs/QmXWV2TmnDQ4jm4XztHeSZLvNZ31de9XrqCf9uqRtAjCqu\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630687b7851461003b57806364f2d4b91461006b575b600080fd5b6100556004803603810190610050919061037c565b610075565b60405161006291906103b8565b60405180910390f35b6100736100a8565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006100d37f000000000000000000000000000000000000000000000000000000000000000061025f565b90508073ffffffffffffffffffffffffffffffffffffffff1663f8c8765e7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000336040518563ffffffff1660e01b815260040161017494939291906103d3565b600060405180830381600087803b15801561018e57600080fd5b505af11580156101a2573d6000803e3d6000fd5b50505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3d2b821286d97aa9d35330d87a82f7b548b9737b10e2d1ba59994edfd50e9d2b3382604051610254929190610418565b60405180910390a150565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b9061049e565b60405180910390fd5b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103498261031e565b9050919050565b6103598161033e565b811461036457600080fd5b50565b60008135905061037681610350565b92915050565b60006020828403121561039257610391610319565b5b60006103a084828501610367565b91505092915050565b6103b28161033e565b82525050565b60006020820190506103cd60008301846103a9565b92915050565b60006080820190506103e860008301876103a9565b6103f560208301866103a9565b61040260408301856103a9565b61040f60608301846103a9565b95945050505050565b600060408201905061042d60008301856103a9565b61043a60208301846103a9565b9392505050565b600082825260208201905092915050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6000610488601683610441565b915061049382610452565b602082019050919050565b600060208201905081810360008301526104b78161047b565b905091905056fea26469706673582212208bfbb5fab5ef8384cbfc4908414258c4fc6b07ca23d21e71a569d666a4a689df64736f6c63430008110033",
  "immutableReferences": {
    "2998": [
      {
        "length": 32,
        "start": 175
      }
    ],
    "3000": [
      {
        "length": 32,
        "start": 243
      }
    ],
    "3002": [
      {
        "length": 32,
        "start": 276
      }
    ],
    "3004": [
      {
        "length": 32,
        "start": 309
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1511:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:20",
                "type": ""
              }
            ],
            "src": "466:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:20",
                "type": ""
              }
            ],
            "src": "568:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:20",
                "type": ""
              }
            ],
            "src": "696:143:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:552:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1004:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "966:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1095:128:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1110:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1124:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1114:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1139:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1185:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1196:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1181:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1181:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1205:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1149:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1149:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1139:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1233:129:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1248:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1262:2:20",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1252:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1324:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1335:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1320:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1320:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1344:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1288:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:20"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1372:129:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1387:16:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1401:2:20",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1391:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1417:74:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1463:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1474:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1459:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1483:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1427:31:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1427:64:20"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1417:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "941:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "949:6:20",
                "type": ""
              }
            ],
            "src": "845:663:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3572:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:20",
                "type": ""
              }
            ],
            "src": "7:75:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:20"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:20"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:20",
                "type": ""
              }
            ],
            "src": "334:126:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:20"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:20",
                "type": ""
              }
            ],
            "src": "466:96:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:20"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:20"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:20"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:20",
                "type": ""
              }
            ],
            "src": "568:122:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:20"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:20",
                "type": ""
              }
            ],
            "src": "696:139:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:20"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:20",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:20",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:20",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:20",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:20"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:20"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:20"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:20",
                "type": ""
              }
            ],
            "src": "841:329:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:53:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1258:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1281:5:20"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1263:17:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:37:20"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1236:3:20",
                "type": ""
              }
            ],
            "src": "1176:118:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:124:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1420:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1431:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1416:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1408:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1488:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1501:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1512:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1444:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1444:71:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1370:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1393:4:20",
                "type": ""
              }
            ],
            "src": "1300:222:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1710:371:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1720:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1732:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1743:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1728:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1720:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1801:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1814:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1825:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1810:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1810:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1757:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1757:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1882:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1838:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1838:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1838:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1964:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1977:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1988:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1973:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1973:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1920:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1920:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1920:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2046:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2059:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2070:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2055:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2055:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2002:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2002:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1658:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1670:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1678:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1686:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1694:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1705:4:20",
                "type": ""
              }
            ],
            "src": "1528:553:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2213:206:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2235:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2246:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2231:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2231:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2223:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2303:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2316:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2327:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2312:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2312:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2259:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:71:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2259:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2384:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2397:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2408:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2393:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2393:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2340:43:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:72:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:72:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2177:9:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2189:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2197:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2208:4:20",
                "type": ""
              }
            ],
            "src": "2087:332:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2521:73:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2538:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2543:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2531:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2531:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2531:19:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2559:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2578:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2583:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2574:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2574:14:20"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2559:11:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2493:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2498:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2509:11:20",
                "type": ""
              }
            ],
            "src": "2425:169:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2706:66:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2728:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2736:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2724:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2724:14:20"
                      },
                      {
                        "hexValue": "455243313136373a20637265617465206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2740:24:20",
                        "type": "",
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2717:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2717:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2717:48:20"
                }
              ]
            },
            "name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2698:6:20",
                "type": ""
              }
            ],
            "src": "2600:172:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2924:220:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2934:74:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3000:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3005:2:20",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2941:58:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:67:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2934:3:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3106:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                      "nodeType": "YulIdentifier",
                      "src": "3017:88:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3017:93:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3017:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3119:19:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3130:3:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3135:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3126:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3119:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2912:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2920:3:20",
                "type": ""
              }
            ],
            "src": "2778:366:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3321:248:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3331:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3343:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3354:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3339:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3339:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3331:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3378:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3389:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3374:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3374:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3397:4:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3403:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3393:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3393:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3367:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3367:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3367:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3423:139:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3557:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3431:124:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:131:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3423:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3301:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3316:4:20",
                "type": ""
              }
            ],
            "src": "3150:419:20"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1167: create failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "404:1235:17:-:0;;;842:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1025:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;985:61;;;;;;;;;;1082:24;1056:50;;;;;;;;;;1136:17;1116:37;;;;;;;;;;1184:19;1163:40;;;;;;;;;;842:368;;;404:1235;;;;;;;;;;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;404:1235:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "404:1235:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;730:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1265:372;;;:::i;:::-;;730:48;;;;;;;;;;;;;;;;;;;;;;:::o;1265:372::-;1307:13;1323:43;1336:29;1323:12;:43::i;:::-;1307:59;;1391:5;1376:32;;;1422:23;1459:16;1489:18;1521:10;1376:165;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1579:5;1551:13;:25;1565:10;1551:25;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1599:31;1612:10;1624:5;1599:31;;;;;;;:::i;:::-;;;;;;;;1297:340;1265:372::o;973:759:6:-;1030:16;1362:48;1344:14;1338:4;1334:25;1328:4;1324:36;1321:90;1315:4;1308:104;1569:32;1552:14;1546:4;1542:25;1539:63;1533:4;1526:77;1644:4;1638;1635:1;1628:21;1616:33;;1696:1;1676:22;;:8;:22;;;1668:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;973:759;;;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:553::-;1705:4;1743:3;1732:9;1728:19;1720:27;;1757:71;1825:1;1814:9;1810:17;1801:6;1757:71;:::i;:::-;1838:72;1906:2;1895:9;1891:18;1882:6;1838:72;:::i;:::-;1920;1988:2;1977:9;1973:18;1964:6;1920:72;:::i;:::-;2002;2070:2;2059:9;2055:18;2046:6;2002:72;:::i;:::-;1528:553;;;;;;;:::o;2087:332::-;2208:4;2246:2;2235:9;2231:18;2223:26;;2259:71;2327:1;2316:9;2312:17;2303:6;2259:71;:::i;:::-;2340:72;2408:2;2397:9;2393:18;2384:6;2340:72;:::i;:::-;2087:332;;;;;:::o;2425:169::-;2509:11;2543:6;2538:3;2531:19;2583:4;2578:3;2574:14;2559:29;;2425:169;;;;:::o;2600:172::-;2740:24;2736:1;2728:6;2724:14;2717:48;2600:172;:::o;2778:366::-;2920:3;2941:67;3005:2;3000:3;2941:67;:::i;:::-;2934:74;;3017:93;3106:3;3017:93;:::i;:::-;3135:2;3130:3;3126:12;3119:19;;2778:366;;;:::o;3150:419::-;3316:4;3354:2;3343:9;3339:18;3331:26;;3403:9;3397:4;3393:20;3389:1;3378:9;3374:17;3367:47;3431:131;3557:4;3431:131;:::i;:::-;3423:139;;3150:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"./ILendingPoolAAVE2.sol\";\nimport \"./HelloDefiAAVE2.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\n/**\n * @title HelloDefiAAVE2Factory\n * @dev This smart contract creates and keep track of the HelloDefiAAVE2 smart contract using the clone pattern in order to save gas.\n */\ncontract HelloDefiAAVE2Factory {\n    address immutable helloDefiAAVE2TemplateAddress;\n    address immutable aaveILendingPoolAddress;\n    address immutable priceFeedAddress;\n    address immutable feesManagerAddress;\n\n    // mapping to keep track of the user smart contracts: user's adress => HelloDefiAAVE2 smart contract.\n    mapping(address => address) public userContracts;\n\n    event CloneCreated(address _owner, address _clone);\n\n    constructor(\n        address _aaveILendingPoolAddress,\n        address  _priceFeedAddress,\n        address _feesManagerAddress\n    ) {\n        helloDefiAAVE2TemplateAddress = address(new HelloDefiAAVE2());\n        aaveILendingPoolAddress = _aaveILendingPoolAddress;\n        priceFeedAddress =  _priceFeedAddress;\n        feesManagerAddress = _feesManagerAddress;\n    }\n\n    // Create a clone of HelloDefiAAVE2 contract\n    function createClone() external {\n        address clone = Clones.clone(helloDefiAAVE2TemplateAddress);\n        HelloDefiAAVE2(clone).initialize(\n            aaveILendingPoolAddress,\n            priceFeedAddress,\n            feesManagerAddress,\n            msg.sender\n        );\n        userContracts[msg.sender] = clone;\n        emit CloneCreated(msg.sender, clone);\n    }\n}\n",
  "sourcePath": "/Users/guillaumedebavelaere/alyra/projects/HelloDefi/truffle/contracts/HelloDefiAAVE2Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/HelloDefiAAVE2Factory.sol",
    "exportedSymbols": {
      "Address": [
        1447
      ],
      "AddressUpgradeable": [
        498
      ],
      "AggregatorV3Interface": [
        45
      ],
      "Clones": [
        697
      ],
      "Context": [
        1469
      ],
      "FeesCollector": [
        2518
      ],
      "HelloDefiAAVE2": [
        2989
      ],
      "HelloDefiAAVE2Factory": [
        3082
      ],
      "IERC20": [
        775
      ],
      "IERC20Metadata": [
        800
      ],
      "IERC20Permit": [
        836
      ],
      "ILendingPoolAAVE2": [
        3110
      ],
      "IPriceFeedConsumer": [
        3122
      ],
      "Initializable": [
        214
      ],
      "Math": [
        2509
      ],
      "Ownable": [
        611
      ],
      "PriceFeedConsumer": [
        3203
      ],
      "SafeERC20": [
        1117
      ],
      "Strings": [
        1644
      ]
    },
    "id": 3083,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2991,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:17"
      },
      {
        "absolutePath": "project:/contracts/ILendingPoolAAVE2.sol",
        "file": "./ILendingPoolAAVE2.sol",
        "id": 2992,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3083,
        "sourceUnit": 3111,
        "src": "57:33:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HelloDefiAAVE2.sol",
        "file": "./HelloDefiAAVE2.sol",
        "id": 2993,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3083,
        "sourceUnit": 2990,
        "src": "91:30:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "id": 2994,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3083,
        "sourceUnit": 615,
        "src": "122:55:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 2995,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3083,
        "sourceUnit": 698,
        "src": "178:50:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HelloDefiAAVE2Factory",
        "contractDependencies": [
          2989
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2996,
          "nodeType": "StructuredDocumentation",
          "src": "230:173:17",
          "text": " @title HelloDefiAAVE2Factory\n @dev This smart contract creates and keep track of the HelloDefiAAVE2 smart contract using the clone pattern in order to save gas."
        },
        "fullyImplemented": true,
        "id": 3082,
        "linearizedBaseContracts": [
          3082
        ],
        "name": "HelloDefiAAVE2Factory",
        "nameLocation": "413:21:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2998,
            "mutability": "immutable",
            "name": "helloDefiAAVE2TemplateAddress",
            "nameLocation": "459:29:17",
            "nodeType": "VariableDeclaration",
            "scope": 3082,
            "src": "441:47:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2997,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "441:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3000,
            "mutability": "immutable",
            "name": "aaveILendingPoolAddress",
            "nameLocation": "512:23:17",
            "nodeType": "VariableDeclaration",
            "scope": 3082,
            "src": "494:41:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2999,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "494:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3002,
            "mutability": "immutable",
            "name": "priceFeedAddress",
            "nameLocation": "559:16:17",
            "nodeType": "VariableDeclaration",
            "scope": 3082,
            "src": "541:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3001,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3004,
            "mutability": "immutable",
            "name": "feesManagerAddress",
            "nameLocation": "599:18:17",
            "nodeType": "VariableDeclaration",
            "scope": 3082,
            "src": "581:36:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3003,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0687b785",
            "id": 3008,
            "mutability": "mutable",
            "name": "userContracts",
            "nameLocation": "765:13:17",
            "nodeType": "VariableDeclaration",
            "scope": 3082,
            "src": "730:48:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 3007,
              "keyType": {
                "id": 3005,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "738:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "730:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 3006,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "3d2b821286d97aa9d35330d87a82f7b548b9737b10e2d1ba59994edfd50e9d2b",
            "id": 3014,
            "name": "CloneCreated",
            "nameLocation": "791:12:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3010,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "812:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3014,
                  "src": "804:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3012,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_clone",
                  "nameLocation": "828:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3014,
                  "src": "820:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:32:17"
            },
            "src": "785:51:17"
          },
          {
            "body": {
              "id": 3045,
              "nodeType": "Block",
              "src": "975:235:17",
              "statements": [
                {
                  "expression": {
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3023,
                      "name": "helloDefiAAVE2TemplateAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2998,
                      "src": "985:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1025:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_HelloDefiAAVE2_$2989_$",
                              "typeString": "function () returns (contract HelloDefiAAVE2)"
                            },
                            "typeName": {
                              "id": 3027,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3026,
                                "name": "HelloDefiAAVE2",
                                "nameLocations": [
                                  "1029:14:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2989,
                                "src": "1029:14:17"
                              },
                              "referencedDeclaration": 2989,
                              "src": "1029:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HelloDefiAAVE2_$2989",
                                "typeString": "contract HelloDefiAAVE2"
                              }
                            }
                          },
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1025:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HelloDefiAAVE2_$2989",
                            "typeString": "contract HelloDefiAAVE2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_HelloDefiAAVE2_$2989",
                            "typeString": "contract HelloDefiAAVE2"
                          }
                        ],
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1017:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3024,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1017:29:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "985:61:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3032,
                  "nodeType": "ExpressionStatement",
                  "src": "985:61:17"
                },
                {
                  "expression": {
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3033,
                      "name": "aaveILendingPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "1056:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3034,
                      "name": "_aaveILendingPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "1082:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1056:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "1056:50:17"
                },
                {
                  "expression": {
                    "id": 3039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3037,
                      "name": "priceFeedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3002,
                      "src": "1116:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3038,
                      "name": "_priceFeedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3018,
                      "src": "1136:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1116:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3040,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:37:17"
                },
                {
                  "expression": {
                    "id": 3043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3041,
                      "name": "feesManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3004,
                      "src": "1163:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3042,
                      "name": "_feesManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3020,
                      "src": "1184:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1163:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3044,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:40:17"
                }
              ]
            },
            "id": 3046,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3016,
                  "mutability": "mutable",
                  "name": "_aaveILendingPoolAddress",
                  "nameLocation": "871:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3046,
                  "src": "863:32:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3018,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nameLocation": "914:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3046,
                  "src": "905:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "mutability": "mutable",
                  "name": "_feesManagerAddress",
                  "nameLocation": "949:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3046,
                  "src": "941:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:121:17"
            },
            "returnParameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:17"
            },
            "scope": 3082,
            "src": "842:368:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3080,
              "nodeType": "Block",
              "src": "1297:340:17",
              "statements": [
                {
                  "assignments": [
                    3050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3050,
                      "mutability": "mutable",
                      "name": "clone",
                      "nameLocation": "1315:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3080,
                      "src": "1307:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3049,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1307:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3055,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3053,
                        "name": "helloDefiAAVE2TemplateAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "1336:29:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3051,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "1323:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$697_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 3052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1330:5:17",
                      "memberName": "clone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 640,
                      "src": "1323:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 3054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1307:59:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3060,
                        "name": "aaveILendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3000,
                        "src": "1422:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3061,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3002,
                        "src": "1459:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3062,
                        "name": "feesManagerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3004,
                        "src": "1489:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3063,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1521:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1525:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1521:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3057,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "1391:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3056,
                          "name": "HelloDefiAAVE2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2989,
                          "src": "1376:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_HelloDefiAAVE2_$2989_$",
                            "typeString": "type(contract HelloDefiAAVE2)"
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1376:21:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelloDefiAAVE2_$2989",
                          "typeString": "contract HelloDefiAAVE2"
                        }
                      },
                      "id": 3059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1398:10:17",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2610,
                      "src": "1376:32:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address) external"
                      }
                    },
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:165:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:165:17"
                },
                {
                  "expression": {
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3067,
                        "name": "userContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3008,
                        "src": "1551:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3070,
                      "indexExpression": {
                        "expression": {
                          "id": 3068,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1565:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1569:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1565:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1551:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3071,
                      "name": "clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "1579:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1551:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3073,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:33:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1612:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1616:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1612:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3077,
                        "name": "clone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "1624:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3074,
                      "name": "CloneCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3014,
                      "src": "1599:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:31:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3079,
                  "nodeType": "EmitStatement",
                  "src": "1594:36:17"
                }
              ]
            },
            "functionSelector": "64f2d4b9",
            "id": 3081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nameLocation": "1274:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:2:17"
            },
            "returnParameters": {
              "id": 3048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1297:0:17"
            },
            "scope": 3082,
            "src": "1265:372:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3083,
        "src": "404:1235:17",
        "usedErrors": []
      }
    ],
    "src": "32:1608:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-04T21:50:41.070Z",
  "devdoc": {
    "details": "This smart contract creates and keep track of the HelloDefiAAVE2 smart contract using the clone pattern in order to save gas.",
    "kind": "dev",
    "methods": {},
    "title": "HelloDefiAAVE2Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}