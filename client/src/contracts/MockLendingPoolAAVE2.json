{
  "contractName": "MockLendingPoolAAVE2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "referralCode",
          "type": "uint16"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/test/helpers/MockLendingPoolAAVE2.sol\":\"MockLendingPoolAAVE2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\"project:/contracts/ILendingPoolAAVE2.sol\":{\"keccak256\":\"0xecd00e4981e916c241a4d36ac15ca1d7105b6d93887f17b10e598f3ea78f342d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422957536646db2858923c739be0af1eb36c1da4bf15603feb9697ea19ebc0ac\",\"dweb:/ipfs/QmTVZxvkjWWk43xyoEXuWZzu5MA57kia4khprgEEhEq4ox\"]},\"project:/test/helpers/MockLendingPoolAAVE2.sol\":{\"keccak256\":\"0xe4bcb11323bbed39a2c54531c8a2af54d81ba255770c7e821b6a0a489cec996b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90815a42df95d6318c92b070850bf170fc5837c908b4aa770b6a33b92ee201ad\",\"dweb:/ipfs/QmdmPk2pkLrbqoneEjn3p2cSfn8hj6SZJJs4cEyL5Gmvuk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061016b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806369328dec1461003b578063e8eda9df14610064575b600080fd5b6100526100493660046100a3565b60019392505050565b60405190815260200160405180910390f35b6100786100723660046100df565b50505050565b005b803573ffffffffffffffffffffffffffffffffffffffff8116811461009e57600080fd5b919050565b6000806000606084860312156100b857600080fd5b6100c18461007a565b9250602084013591506100d66040850161007a565b90509250925092565b600080600080608085870312156100f557600080fd5b6100fe8561007a565b9350602085013592506101136040860161007a565b9150606085013561ffff8116811461012a57600080fd5b93969295509093505056fea26469706673582212208b62d245b685fd914ccd127c494349a48e4095f78415590b119794c2854eb2bd64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806369328dec1461003b578063e8eda9df14610064575b600080fd5b6100526100493660046100a3565b60019392505050565b60405190815260200160405180910390f35b6100786100723660046100df565b50505050565b005b803573ffffffffffffffffffffffffffffffffffffffff8116811461009e57600080fd5b919050565b6000806000606084860312156100b857600080fd5b6100c18461007a565b9250602084013591506100d66040850161007a565b90509250925092565b600080600080608085870312156100f557600080fd5b6100fe8561007a565b9350602085013592506101136040860161007a565b9150606085013561ffff8116811461012a57600080fd5b93969295509093505056fea26469706673582212208b62d245b685fd914ccd127c494349a48e4095f78415590b119794c2854eb2bd64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1221:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:13",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:13"
                  },
                  "nodeType": "YulIf",
                  "src": "111:93:13"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:13",
                "type": ""
              }
            ],
            "src": "14:196:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "319:224:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "365:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "374:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "377:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "367:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "367:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "340:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "336:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "336:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "361:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "332:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "332:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "329:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "390:39:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "419:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "400:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:29:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "390:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "438:42:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "465:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "476:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "461:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "448:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "448:32:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "438:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "489:48:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "522:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "533:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "518:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "518:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "499:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "499:38:13"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "489:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "280:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "292:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "300:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "308:6:13",
                "type": ""
              }
            ],
            "src": "215:328:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "649:76:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "659:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "671:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "682:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "667:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "659:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "701:9:13"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "712:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "694:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:25:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "694:25:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "618:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "629:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "640:4:13",
                "type": ""
              }
            ],
            "src": "548:177:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "850:369:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "897:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "906:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "909:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "899:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "899:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "899:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "871:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "880:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "867:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "867:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "892:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "863:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:33:13"
                  },
                  "nodeType": "YulIf",
                  "src": "860:53:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "922:39:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "951:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "932:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:29:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "922:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1021:48:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1054:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1065:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1050:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1050:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1031:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1031:38:13"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1021:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1078:45:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1108:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1119:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1104:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1091:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:32:13"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1082:5:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1173:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1182:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1185:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1175:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1175:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1175:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1145:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1156:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1163:6:13",
                                "type": "",
                                "value": "0xffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1152:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1152:18:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1142:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1142:29:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1135:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:37:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1132:57:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1198:15:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1208:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "792:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "803:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "815:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "823:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "831:6:13",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "839:6:13",
                "type": ""
              }
            ],
            "src": "730:489:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint16(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value3 := value\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "106:457:10:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "106:457:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:196;;;;;;:::i;:::-;553:1;365:196;;;;;;;;;694:25:13;;;682:2;667:18;365:196:10;;;;;;;163;;;;;;:::i;:::-;;;;;;;;14::13;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:328::-;292:6;300;308;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;400:29;419:9;400:29;:::i;:::-;390:39;;476:2;465:9;461:18;448:32;438:42;;499:38;533:2;522:9;518:18;499:38;:::i;:::-;489:48;;215:328;;;;;:::o;730:489::-;815:6;823;831;839;892:3;880:9;871:7;867:23;863:33;860:53;;;909:1;906;899:12;860:53;932:29;951:9;932:29;:::i;:::-;922:39;;1008:2;997:9;993:18;980:32;970:42;;1031:38;1065:2;1054:9;1050:18;1031:38;:::i;:::-;1021:48;;1119:2;1108:9;1104:18;1091:32;1163:6;1156:5;1152:18;1145:5;1142:29;1132:57;;1185:1;1182;1175:12;1132:57;730:489;;;;-1:-1:-1;730:489:13;;-1:-1:-1;;730:489:13:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"../../contracts/ILendingPoolAAVE2.sol\";\n\ncontract MockLendingPoolAAVE2 is ILendingPoolAAVE2 {\n    function deposit(\n        address asset,\n        uint256 amount,\n        address onBehalfOf,\n        uint16 referralCode\n    ) external override {\n        // nothing to do, it is just a mock\n    }\n\n    function withdraw(\n        address asset,\n        uint256 amount,\n        address to\n    ) external override returns (uint256) {\n        // nothing to do, it is just a mock\n        return 1;\n    }\n}\n",
  "sourcePath": "/Users/guillaumedebavelaere/alyra/projects/HelloDefi/truffle/test/helpers/MockLendingPoolAAVE2.sol",
  "ast": {
    "absolutePath": "project:/test/helpers/MockLendingPoolAAVE2.sol",
    "exportedSymbols": {
      "ILendingPoolAAVE2": [
        788
      ],
      "MockLendingPoolAAVE2": [
        1019
      ]
    },
    "id": 1020,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 987,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "project:/contracts/ILendingPoolAAVE2.sol",
        "file": "../../contracts/ILendingPoolAAVE2.sol",
        "id": 988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1020,
        "sourceUnit": 789,
        "src": "57:47:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 989,
              "name": "ILendingPoolAAVE2",
              "nameLocations": [
                "139:17:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 788,
              "src": "139:17:10"
            },
            "id": 990,
            "nodeType": "InheritanceSpecifier",
            "src": "139:17:10"
          }
        ],
        "canonicalName": "MockLendingPoolAAVE2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1019,
        "linearizedBaseContracts": [
          1019,
          788
        ],
        "name": "MockLendingPoolAAVE2",
        "nameLocation": "115:20:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              775
            ],
            "body": {
              "id": 1002,
              "nodeType": "Block",
              "src": "308:51:10",
              "statements": []
            },
            "functionSelector": "e8eda9df",
            "id": 1003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "172:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1000,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "299:8:10"
            },
            "parameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "197:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1003,
                  "src": "189:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "220:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1003,
                  "src": "212:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "244:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1003,
                  "src": "236:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "referralCode",
                  "nameLocation": "271:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1003,
                  "src": "264:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "264:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:110:10"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:10"
            },
            "scope": 1019,
            "src": "163:196:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              787
            ],
            "body": {
              "id": 1017,
              "nodeType": "Block",
              "src": "492:69:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "553:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 1014,
                  "id": 1016,
                  "nodeType": "Return",
                  "src": "546:8:10"
                }
              ]
            },
            "functionSelector": "69328dec",
            "id": 1018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "374:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1011,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "465:8:10"
            },
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "400:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "392:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "423:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "415:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "447:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "439:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "382:73:10"
            },
            "returnParameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "483:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:9:10"
            },
            "scope": 1019,
            "src": "365:196:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1020,
        "src": "106:457:10",
        "usedErrors": []
      }
    ],
    "src": "32:532:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-11T10:56:47.559Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(address,uint256,address,uint16)": {
        "details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
        "params": {
          "amount": "The amount to be deposited",
          "asset": "The address of the underlying asset to deposit",
          "onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
          "referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
        }
      },
      "withdraw(address,uint256,address)": {
        "details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
        "params": {
          "amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
          "asset": "The address of the underlying asset to withdraw",
          "to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
        },
        "returns": {
          "_0": "The final amount withdrawn*"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}